{"version":3,"file":"static/js/529.c0a7a585.chunk.js","mappings":"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","sources":["components/App.styled.js","components/ContactForm/ContactForm.jsx","components/EditContactForm/EditContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Notification/Notification.jsx","pages/Contacts.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  text-align: center;\n  font-size: 20px;\n  width: 400px;\n  padding: 10px;\n  margin: 0 auto;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contactsOperations';\nimport { selectContacts } from 'redux/selectors';\nimport { Box, Button, TextField } from '@mui/material';\nimport toast from 'react-hot-toast';\n\nexport const ContactForm = ({ createContact }) => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contactList = useSelector(selectContacts);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const isAlreadyExist = contactList.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isAlreadyExist) {\n      toast.error(`${name} is already in contacts!`, {\n        duration: 3000,\n        position: 'top-right',\n      });\n      return;\n    }\n\n    try {\n      await dispatch(addContact({ name, number })).unwrap();\n      toast.success('Contact was added!', {\n        duration: 3000,\n        position: 'top-right',\n      });\n      await dispatch(fetchContacts()).unwrap();\n      setName('');\n      setNumber('');\n      form.reset();\n    } catch (error) {\n      toast.error('Something was wrong. Please try again!', {\n        duration: 3000,\n        position: 'top-right',\n      });\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        p: 3,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px',\n        maxWidth: '400px',\n        boxShadow: '0 0 10px 1px grey',\n        borderRadius: '5px',\n        mb: 2,\n        mt: 2,\n      }}\n      onSubmit={handleSubmit}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        required\n        id=\"standard-text\"\n        label=\"Name\"\n        type=\"text\"\n        value={name}\n        variant=\"standard\"\n        onChange={e => setName(e.target.value)}\n      />\n      <TextField\n        required\n        id=\"standard-number\"\n        label=\"Number\"\n        type=\"tel\"\n        value={number}\n        variant=\"standard\"\n        onChange={e => setNumber(e.target.value)}\n      />\n      <Button variant=\"contained\" type=\"submit\">\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n","import React, { useState } from 'react';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { Box, IconButton, TextField } from '@mui/material';\n\nconst EditContactForm = ({ handleEdit, oldName, oldNumber, cancelEdit }) => {\n  const [name, setName] = useState(oldName);\n  const [number, setNumber] = useState(oldNumber);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    handleEdit({ name, number });\n    setName('');\n    setNumber('');\n    form.reset();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{ p: 1, display: 'flex', gap: '5px', maxWidth: '300px' }}\n      onSubmit={handleSubmit}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          required\n          id=\"standard-text\"\n          label=\"Name\"\n          type=\"text\"\n          defaultValue={name}\n          variant=\"standard\"\n          onChange={e => setName(e.target.value)}\n        />{' '}\n        <TextField\n          required\n          id=\"standard-number\"\n          label=\"Number\"\n          type=\"tel\"\n          defaultValue={number}\n          variant=\"standard\"\n          onChange={e => setNumber(e.target.value)}\n        />\n      </div>\n\n      <IconButton aria-label=\"done\" color=\"success\" type=\"submit\">\n        <CheckCircleIcon />\n      </IconButton>\n      <IconButton\n        aria-label=\"done\"\n        color=\"error\"\n        type=\"button\"\n        onClick={cancelEdit}\n      >\n        <CancelIcon />\n      </IconButton>\n    </Box>\n  );\n};\n\nexport default EditContactForm;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n  patchContact,\n} from 'redux/contactsOperations';\nimport EditContactForm from 'components/EditContactForm/EditContactForm';\nimport { Box, CardContent, IconButton, Typography } from '@mui/material';\nimport { Avatar, Grid, Card, CardActions, CardHeader } from '@mui/material';\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport toast from 'react-hot-toast';\n\nconst ContactItem = ({ contact }) => {\n  const [edit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDelete = async contactId => {\n    try {\n      await dispatch(deleteContact(contactId)).unwrap();\n      await dispatch(fetchContacts()).unwrap();\n      toast.success('Contact was deleted!', {\n        duration: 3000,\n        position: 'top-right',\n      });\n    } catch (error) {\n      toast.error('Something was wrong. Please try again!', {\n        duration: 3000,\n        position: 'top-right',\n      });\n    }\n  };\n\n  const editClick = () => {\n    setEdit(true);\n  };\n\n  const handleEdit = async ({ name, number }) => {\n    try {\n      await dispatch(\n        patchContact({ contactId: contact.id, name, number })\n      ).unwrap();\n      dispatch(fetchContacts());\n      toast.success('Contact was edited!', {\n        duration: 3000,\n        position: 'top-right',\n      });\n      setEdit(false);\n    } catch (error) {\n      toast.error('Something was wrong. Please try again!', {\n        duration: 3000,\n        position: 'top-right',\n      });\n    }\n  };\n\n  const cancelEdit = () => {\n    setEdit(false);\n  };\n\n  return (\n    <>\n      <Grid item key={contact.id}>\n        <Card sx={{ boxShadow: '0 0 10px 1px grey', borderRadius: '5px' }}>\n          <Box\n            sx={{\n              display: 'flex',\n              maxWidth: '400px',\n              gap: '10px',\n              justifyContent: 'space-between',\n            }}\n          >\n            <CardHeader\n              avatar={\n                <Avatar sx={{ bgcolor: 'primary.main' }} aria-label=\"contact\">\n                  {contact.name?.at(0)?.toUpperCase()}\n                </Avatar>\n              }\n            />\n            {!edit ? (\n              <>\n                <CardContent>\n                  <Typography variant=\"h5\" color=\"text.secondary\">\n                    {contact.name}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{ fontSize: 16 }}\n                    color=\"text.secondary\"\n                  >\n                    {contact.number}\n                  </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                  <IconButton\n                    edge=\"end\"\n                    color=\"primary\"\n                    sx={{ mr: 1 }}\n                    aria-label=\"editContact\"\n                    onClick={() => editClick()}\n                  >\n                    <BorderColorIcon />\n                  </IconButton>\n\n                  <IconButton\n                    edge=\"end\"\n                    color=\"primary\"\n                    aria-label=\"deleteContact\"\n                    sx={{ mr: 0.5 }}\n                    onClick={() => handleDelete(contact.id)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </CardActions>\n              </>\n            ) : (\n              <EditContactForm\n                handleEdit={handleEdit}\n                oldName={contact.name}\n                oldNumber={contact.number}\n                cancelEdit={cancelEdit}\n              />\n            )}\n          </Box>\n        </Card>\n      </Grid>\n    </>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport ContactItem from 'components/ContactItem/ContactItem';\n//import { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { Grid } from '@mui/material';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <>\n      <Grid container direction=\"column\" spacing={2} justifyContent=\"center\">\n        {visibleContacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value.toLowerCase()));\n  };\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n        mb: 2,\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        id=\"outlined-multiline-static\"\n        label=\"Filter by name\"\n        type=\"text\"\n        name=\"filter\"\n        sx={{ boxShadow: '0 0 5px 0.5px grey', borderRadius: '5px' }}\n        onChange={changeFilter}\n        value={useSelector(selectFilter)}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Notification = ({ text }) => {\n  return <p>{text}</p>;\n};\n\nexport default Notification;\n","import React, { useEffect } from 'react';\nimport { Container } from 'components/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Notification from 'components/Notification/Notification';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/selectors';\nimport { fetchContacts } from 'redux/contactsOperations';\n\nexport default function Contacts() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length > 0 ? (\n        <Filter />\n      ) : (\n        <Notification text={'Your phonebook is empty. Add first contact!'} />\n      )}\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ContactForm","_ref","createContact","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contactList","useSelector","selectContacts","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","form","wrap","_context","prev","next","preventDefault","target","find","el","toLowerCase","toast","concat","duration","position","abrupt","addContact","unwrap","fetchContacts","reset","t0","stop","_x","apply","arguments","_jsxs","Box","component","sx","p","display","flexDirection","gap","maxWidth","boxShadow","borderRadius","mb","mt","onSubmit","noValidate","autoComplete","children","_jsx","TextField","required","id","label","type","value","variant","onChange","Button","handleEdit","oldName","oldNumber","cancelEdit","defaultValue","IconButton","color","CheckCircleIcon","onClick","CancelIcon","_contact$name","_contact$name$at","contact","edit","setEdit","handleDelete","contactId","deleteContact","_ref4","_callee2","_ref3","_context2","patchContact","_x2","_Fragment","Grid","item","Card","justifyContent","CardHeader","avatar","Avatar","bgcolor","at","toUpperCase","EditContactForm","CardContent","Typography","fontSize","CardActions","disableSpacing","edge","mr","BorderColorIcon","DeleteIcon","visibleContacts","selectVisibleContacts","container","direction","spacing","map","ContactItem","m","width","event","setFilter","selectFilter","text","Contacts","contacts","isLoading","selectIsLoading","error","selectError","useEffect","length","Filter","Notification","ContactList"],"sourceRoot":""}