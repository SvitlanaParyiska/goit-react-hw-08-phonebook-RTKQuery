{"version":3,"file":"static/js/665.49c7180b.chunk.js","mappings":"2PAmGA,EA/FqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEG,OAD7BR,EAAES,iBAAiBR,EACeD,EAAEU,OAAOC,SAAnCT,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SAAQE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAErBhB,GACJoB,EAAAA,EAAAA,IAAS,CACPV,KAAMA,EAAKW,MACXV,MAAOA,EAAMU,MACbT,SAAUA,EAASS,SAErBC,SAAS,KAAD,EACVC,EAAAA,GAAAA,QAAc,WAAY,CACxBC,SAAU,IACVC,SAAU,cAEZjB,EAAEU,OAAOQ,QAAQZ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,SAEjBS,EAAAA,GAAAA,MAAY,uCAAwC,CAClDC,SAAU,IACVC,SAAU,cACT,yBAAAX,EAAAc,OAAA,GAAArB,EAAA,kBAEN,gBAtBiBsB,GAAA,OAAA1B,EAAA2B,MAAA,KAAAC,UAAA,KAwBlB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAwBC,MAAO,CAAEC,MAAO,KAAMC,UAC3DC,EAAAA,EAAAA,MAAA,QAAMC,SAAUpC,EAAcqC,aAAa,MAAKH,SAAA,EAC9CC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMG,SAAA,EACnBJ,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,mBAAmBP,UAAU,aAAYG,SAAC,cAGzDJ,EAAAA,EAAAA,KAAA,SACES,KAAK,OACL/B,KAAK,OACLuB,UAAU,eACVS,GAAG,mBACHC,UAAQ,QAGZN,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMG,SAAA,EACnBJ,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,qBAAqBP,UAAU,aAAYG,SAAC,WAG3DJ,EAAAA,EAAAA,KAAA,SACES,KAAK,QACL/B,KAAK,QACLuB,UAAU,eACVS,GAAG,qBACH,mBAAiB,YACjBE,QAAQ,oDACRD,UAAQ,KAEVX,EAAAA,EAAAA,KAAA,OAAKU,GAAG,YAAYT,UAAU,YAAWG,SAAC,uDAI5CC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMG,SAAA,EACnBJ,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,wBAAwBP,UAAU,aAAYG,SAAC,cAG9DJ,EAAAA,EAAAA,KAAA,SACEtB,KAAK,WACL+B,KAAK,WACLR,UAAU,eACVS,GAAG,wBACHG,UAAU,IACVF,UAAQ,QAGZX,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASR,UAAU,eAAcG,SAAC,qBAqBvD,ECjFA,EAXiB,WAQf,OAAOJ,EAAAA,EAAAA,KAACc,EAAY,GACtB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/authOperations';\nimport toast from 'react-hot-toast';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const { name, email, password } = e.target.elements;\n    try {\n      await dispatch(\n        register({\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        })\n      ).unwrap();\n      toast.success('Welcome!', {\n        duration: 3000,\n        position: 'top-right',\n      });\n      e.target.reset();\n    } catch (e) {\n      toast.error('Fill in correct name or valid email!', {\n        duration: 3000,\n        position: 'top-right',\n      });\n    }\n  };\n\n  return (\n    <div className=\"card p-5 mx-auto mt-5\" style={{ width: 500 }}>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputName\" className=\"form-label\">\n            Username\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"form-control\"\n            id=\"exampleInputName\"\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"\n            required\n          />\n          <div id=\"emailHelp\" className=\"form-text\">\n            We'll never share your email with anyone else.\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n            Password\n          </label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            className=\"form-control\"\n            id=\"exampleInputPassword1\"\n            minLength=\"7\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-info\">\n          Registration\n        </button>\n      </form>\n    </div>\n    // <form onSubmit={handleSubmit} autoComplete=\"off\">\n    //   <label>\n    //     Username\n    //     <input type=\"text\" name=\"name\" />\n    //   </label>\n    //   <label>\n    //     Email\n    //     <input type=\"email\" name=\"email\" />\n    //   </label>\n    //   <label>\n    //     Password\n    //     <input type=\"password\" name=\"password\" />\n    //   </label>\n    //   <button type=\"submit\">Register</button>\n    // </form>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\n//import { useDispatch } from 'react-redux';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n//import { register } from 'redux/authOperations';\n\nconst Register = () => {\n  // const dispatch = useDispatch;\n  // const registration = body => {\n  //   dispatch(register(body));\n\n  //  registration = { registration };\n  // };\n\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_e$target$elements","name","email","password","wrap","_context","prev","next","preventDefault","target","elements","register","value","unwrap","toast","duration","position","reset","t0","stop","_x","apply","arguments","_jsx","className","style","width","children","_jsxs","onSubmit","autoComplete","htmlFor","type","id","required","pattern","minLength","RegisterForm"],"sourceRoot":""}